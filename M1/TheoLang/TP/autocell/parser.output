   0  $accept : %entry% $end

   1  program : INT DIMENSIONS OF config END opt_statements EOF

   2  config : INT DOT_DOT INT
   3         | fields

   4  fields : field
   5         | fields COMMA field

   6  field : ID OF INT DOT_DOT INT

   7  opt_statements :
   8                 | statement opt_statements

   9  statement : cell ASSIGN e
  10            | ID ASSIGN e
  11            | IF condition THEN opt_statements next_

  12  next_ : ELSIF condition THEN opt_statements next_
  13        | ELSE opt_statements END
  14        | END

  15  condition : e EQ e
  16            | e NE e
  17            | e LT e
  18            | e GT e
  19            | e LE e
  20            | e GE e

  21  cell : LBRACKET INT COMMA INT RBRACKET

  22  e : e PLUS t
  23    | e MINUS t
  24    | t

  25  t : t MULT f
  26    | t DIV f
  27    | t MOD f
  28    | f

  29  f : cell
  30    | MINUS f
  31    | INT
  32    | ID
  33    | OPARA e FPARA

  34  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (34)

	INT  shift 3
	.  error

	program  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	program : INT . DIMENSIONS OF config END opt_statements EOF  (1)

	DIMENSIONS  shift 5
	.  error


state 4
	%entry% : '\001' program .  (34)

	.  reduce 34


state 5
	program : INT DIMENSIONS . OF config END opt_statements EOF  (1)

	OF  shift 6
	.  error


state 6
	program : INT DIMENSIONS OF . config END opt_statements EOF  (1)

	ID  shift 7
	INT  shift 8
	.  error

	config  goto 9
	fields  goto 10
	field  goto 11


state 7
	field : ID . OF INT DOT_DOT INT  (6)

	OF  shift 12
	.  error


state 8
	config : INT . DOT_DOT INT  (2)

	DOT_DOT  shift 13
	.  error


state 9
	program : INT DIMENSIONS OF config . END opt_statements EOF  (1)

	END  shift 14
	.  error


state 10
	config : fields .  (3)
	fields : fields . COMMA field  (5)

	COMMA  shift 15
	END  reduce 3


state 11
	fields : field .  (4)

	.  reduce 4


state 12
	field : ID OF . INT DOT_DOT INT  (6)

	INT  shift 16
	.  error


state 13
	config : INT DOT_DOT . INT  (2)

	INT  shift 17
	.  error


state 14
	program : INT DIMENSIONS OF config END . opt_statements EOF  (1)
	opt_statements : .  (7)

	IF  shift 18
	LBRACKET  shift 19
	ID  shift 20
	EOF  reduce 7

	opt_statements  goto 21
	statement  goto 22
	cell  goto 23


state 15
	fields : fields COMMA . field  (5)

	ID  shift 7
	.  error

	field  goto 24


state 16
	field : ID OF INT . DOT_DOT INT  (6)

	DOT_DOT  shift 25
	.  error


state 17
	config : INT DOT_DOT INT .  (2)

	.  reduce 2


state 18
	statement : IF . condition THEN opt_statements next_  (11)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 31
	condition  goto 32
	t  goto 33
	f  goto 34


state 19
	cell : LBRACKET . INT COMMA INT RBRACKET  (21)

	INT  shift 35
	.  error


state 20
	statement : ID . ASSIGN e  (10)

	ASSIGN  shift 36
	.  error


state 21
	program : INT DIMENSIONS OF config END opt_statements . EOF  (1)

	EOF  shift 37
	.  error


state 22
	opt_statements : statement . opt_statements  (8)
	opt_statements : .  (7)

	IF  shift 18
	LBRACKET  shift 19
	ID  shift 20
	EOF  reduce 7
	ELSE  reduce 7
	ELSIF  reduce 7
	END  reduce 7

	opt_statements  goto 38
	statement  goto 22
	cell  goto 23


state 23
	statement : cell . ASSIGN e  (9)

	ASSIGN  shift 39
	.  error


state 24
	fields : fields COMMA field .  (5)

	.  reduce 5


state 25
	field : ID OF INT DOT_DOT . INT  (6)

	INT  shift 40
	.  error


state 26
	f : OPARA . e FPARA  (33)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 41
	t  goto 33
	f  goto 34


state 27
	f : MINUS . f  (30)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	f  goto 42


state 28
	f : ID .  (32)

	.  reduce 32


state 29
	f : INT .  (31)

	.  reduce 31


state 30
	f : cell .  (29)

	.  reduce 29


state 31
	condition : e . EQ e  (15)
	condition : e . NE e  (16)
	condition : e . LT e  (17)
	condition : e . GT e  (18)
	condition : e . LE e  (19)
	condition : e . GE e  (20)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	EQ  shift 45
	NE  shift 46
	LT  shift 47
	GT  shift 48
	LE  shift 49
	GE  shift 50
	.  error


state 32
	statement : IF condition . THEN opt_statements next_  (11)

	THEN  shift 51
	.  error


state 33
	e : t .  (24)
	t : t . MULT f  (25)
	t : t . DIV f  (26)
	t : t . MOD f  (27)

	MULT  shift 52
	DIV  shift 53
	MOD  shift 54
	EOF  reduce 24
	IF  reduce 24
	ELSE  reduce 24
	ELSIF  reduce 24
	THEN  reduce 24
	END  reduce 24
	LBRACKET  reduce 24
	FPARA  reduce 24
	PLUS  reduce 24
	MINUS  reduce 24
	EQ  reduce 24
	NE  reduce 24
	LT  reduce 24
	GT  reduce 24
	LE  reduce 24
	GE  reduce 24
	ID  reduce 24


state 34
	t : f .  (28)

	.  reduce 28


state 35
	cell : LBRACKET INT . COMMA INT RBRACKET  (21)

	COMMA  shift 55
	.  error


state 36
	statement : ID ASSIGN . e  (10)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 56
	t  goto 33
	f  goto 34


state 37
	program : INT DIMENSIONS OF config END opt_statements EOF .  (1)

	.  reduce 1


state 38
	opt_statements : statement opt_statements .  (8)

	.  reduce 8


state 39
	statement : cell ASSIGN . e  (9)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 57
	t  goto 33
	f  goto 34


state 40
	field : ID OF INT DOT_DOT INT .  (6)

	.  reduce 6


state 41
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)
	f : OPARA e . FPARA  (33)

	FPARA  shift 58
	PLUS  shift 43
	MINUS  shift 44
	.  error


state 42
	f : MINUS f .  (30)

	.  reduce 30


state 43
	e : e PLUS . t  (22)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	t  goto 59
	f  goto 34


state 44
	e : e MINUS . t  (23)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	t  goto 60
	f  goto 34


state 45
	condition : e EQ . e  (15)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 61
	t  goto 33
	f  goto 34


state 46
	condition : e NE . e  (16)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 62
	t  goto 33
	f  goto 34


state 47
	condition : e LT . e  (17)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 63
	t  goto 33
	f  goto 34


state 48
	condition : e GT . e  (18)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 64
	t  goto 33
	f  goto 34


state 49
	condition : e LE . e  (19)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 65
	t  goto 33
	f  goto 34


state 50
	condition : e GE . e  (20)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 66
	t  goto 33
	f  goto 34


state 51
	statement : IF condition THEN . opt_statements next_  (11)
	opt_statements : .  (7)

	IF  shift 18
	LBRACKET  shift 19
	ID  shift 20
	ELSE  reduce 7
	ELSIF  reduce 7
	END  reduce 7

	opt_statements  goto 67
	statement  goto 22
	cell  goto 23


state 52
	t : t MULT . f  (25)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	f  goto 68


state 53
	t : t DIV . f  (26)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	f  goto 69


state 54
	t : t MOD . f  (27)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	f  goto 70


state 55
	cell : LBRACKET INT COMMA . INT RBRACKET  (21)

	INT  shift 71
	.  error


state 56
	statement : ID ASSIGN e .  (10)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	EOF  reduce 10
	IF  reduce 10
	ELSE  reduce 10
	ELSIF  reduce 10
	END  reduce 10
	LBRACKET  reduce 10
	ID  reduce 10


state 57
	statement : cell ASSIGN e .  (9)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	EOF  reduce 9
	IF  reduce 9
	ELSE  reduce 9
	ELSIF  reduce 9
	END  reduce 9
	LBRACKET  reduce 9
	ID  reduce 9


state 58
	f : OPARA e FPARA .  (33)

	.  reduce 33


state 59
	e : e PLUS t .  (22)
	t : t . MULT f  (25)
	t : t . DIV f  (26)
	t : t . MOD f  (27)

	MULT  shift 52
	DIV  shift 53
	MOD  shift 54
	EOF  reduce 22
	IF  reduce 22
	ELSE  reduce 22
	ELSIF  reduce 22
	THEN  reduce 22
	END  reduce 22
	LBRACKET  reduce 22
	FPARA  reduce 22
	PLUS  reduce 22
	MINUS  reduce 22
	EQ  reduce 22
	NE  reduce 22
	LT  reduce 22
	GT  reduce 22
	LE  reduce 22
	GE  reduce 22
	ID  reduce 22


state 60
	e : e MINUS t .  (23)
	t : t . MULT f  (25)
	t : t . DIV f  (26)
	t : t . MOD f  (27)

	MULT  shift 52
	DIV  shift 53
	MOD  shift 54
	EOF  reduce 23
	IF  reduce 23
	ELSE  reduce 23
	ELSIF  reduce 23
	THEN  reduce 23
	END  reduce 23
	LBRACKET  reduce 23
	FPARA  reduce 23
	PLUS  reduce 23
	MINUS  reduce 23
	EQ  reduce 23
	NE  reduce 23
	LT  reduce 23
	GT  reduce 23
	LE  reduce 23
	GE  reduce 23
	ID  reduce 23


state 61
	condition : e EQ e .  (15)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	THEN  reduce 15


state 62
	condition : e NE e .  (16)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	THEN  reduce 16


state 63
	condition : e LT e .  (17)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	THEN  reduce 17


state 64
	condition : e GT e .  (18)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	THEN  reduce 18


state 65
	condition : e LE e .  (19)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	THEN  reduce 19


state 66
	condition : e GE e .  (20)
	e : e . PLUS t  (22)
	e : e . MINUS t  (23)

	PLUS  shift 43
	MINUS  shift 44
	THEN  reduce 20


state 67
	statement : IF condition THEN opt_statements . next_  (11)

	ELSE  shift 72
	ELSIF  shift 73
	END  shift 74
	.  error

	next_  goto 75


state 68
	t : t MULT f .  (25)

	.  reduce 25


state 69
	t : t DIV f .  (26)

	.  reduce 26


state 70
	t : t MOD f .  (27)

	.  reduce 27


state 71
	cell : LBRACKET INT COMMA INT . RBRACKET  (21)

	RBRACKET  shift 76
	.  error


state 72
	next_ : ELSE . opt_statements END  (13)
	opt_statements : .  (7)

	IF  shift 18
	LBRACKET  shift 19
	ID  shift 20
	END  reduce 7

	opt_statements  goto 77
	statement  goto 22
	cell  goto 23


state 73
	next_ : ELSIF . condition THEN opt_statements next_  (12)

	LBRACKET  shift 19
	OPARA  shift 26
	MINUS  shift 27
	ID  shift 28
	INT  shift 29
	.  error

	cell  goto 30
	e  goto 31
	condition  goto 78
	t  goto 33
	f  goto 34


state 74
	next_ : END .  (14)

	.  reduce 14


state 75
	statement : IF condition THEN opt_statements next_ .  (11)

	.  reduce 11


state 76
	cell : LBRACKET INT COMMA INT RBRACKET .  (21)

	.  reduce 21


state 77
	next_ : ELSE opt_statements . END  (13)

	END  shift 79
	.  error


state 78
	next_ : ELSIF condition . THEN opt_statements next_  (12)

	THEN  shift 80
	.  error


state 79
	next_ : ELSE opt_statements END .  (13)

	.  reduce 13


state 80
	next_ : ELSIF condition THEN . opt_statements next_  (12)
	opt_statements : .  (7)

	IF  shift 18
	LBRACKET  shift 19
	ID  shift 20
	ELSE  reduce 7
	ELSIF  reduce 7
	END  reduce 7

	opt_statements  goto 81
	statement  goto 22
	cell  goto 23


state 81
	next_ : ELSIF condition THEN opt_statements . next_  (12)

	ELSE  shift 72
	ELSIF  shift 73
	END  shift 74
	.  error

	next_  goto 82


state 82
	next_ : ELSIF condition THEN opt_statements next_ .  (12)

	.  reduce 12


33 terminals, 14 nonterminals
35 grammar rules, 83 states
